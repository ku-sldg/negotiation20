@inproceedings{Rowe::Ordering,
  author    = {Paul D. Rowe},
  editor    = {Daniel Dougherty and
               Jos{\'{e}} Meseguer and
               Sebastian Alexander M{\"{o}}dersheim and
               Paul D. Rowe},
  title     = {On Orderings in Security Models},
  booktitle = {Protocols, Strands, and Logic - Essays Dedicated to Joshua Guttman
               on the Occasion of his 66.66th Birthday},
  series    = {Lecture Notes in Computer Science},
  volume    = {13066},
  pages     = {370--393},
  publisher = {Springer},
  year      = {2021},
  url       = {https://doi.org/10.1007/978-3-030-91631-2\_21},
  doi       = {10.1007/978-3-030-91631-2\_21},
  timestamp = {Wed, 01 Dec 2021 19:23:33 +0100},
  biburl    = {https://dblp.org/rec/conf/birthday/Rowe21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{Ramsdell::Orchestrating,
author="Ramsdell, John D.
and Rowe, Paul D.
and Alexander, Perry
and Helble, Sarah C.
and Loscocco, Peter
and Pendergrass, J. Aaron
and Petz, Adam",
editor="Nielson, Flemming
and Sands, David",
title="Orchestrating Layered Attestations",
booktitle="Principles of Security and Trust",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="197--221",
abstract="We present Copland, a language for specifying layered attestations. Layered attestations provide a remote appraiser with structured evidence of the integrity of a target system to support a trust decision. The language is designed to bridge the gap between formal analysis of attestation security guarantees and concrete implementations. We therefore provide two semantic interpretations of terms in our language. The first is a denotational semantics in terms of partially ordered sets of events. This directly connects Copland to prior work on layered attestation. The second is an operational semantics detailing how the data and control flow are executed. This gives explicit implementation guidance for attestation frameworks. We show a formal connection between the two semantics ensuring that any execution according to the operational semantics is consistent with the denotational event semantics. This ensures that formal guarantees resulting from analyzing the event semantics will hold for executions respecting the operational semantics. All results have been formally verified with the Coq proof assistant.",
isbn="978-3-030-17138-4"
}

@book{FRAP,
    title = {Formal Reasoning About Programs},
    author = {Adam Chlipala},
    year = {2021},
    howpublished = {\url{http://adam.chlipala.net/frap/frap_book.pdf}},  
}

@book{Milner,
author = {Milner, R.},
title = {Communication and Concurrency},
year = {1989},
isbn = {0131149849},
publisher = {Prentice-Hall, Inc.},
address = {USA}
}

@InProceedings{Rowe::Bundling,
author="Rowe, Paul D.",
editor="Franz, Michael
and Papadimitratos, Panos",
title="Bundling Evidence for Layered Attestation",
booktitle="Trust and Trustworthy Computing",
year="2016",
publisher="Springer International Publishing",
address="Cham",
pages="119--139",
abstract="Systems designed with measurement and attestation in mind are often layered, with the lower layers measuring the layers above them. Attestations of such systems, which we call layered attestations, must bundle together the results of a diverse set of application-specific measurements of various parts of the system. Some methods of layered attestation are more trustworthy than others especially in the presence of an adversary that can dynamically corrupt system components. It is therefore important for system designers to understand the trust consequences of different designs. This paper presents a formal framework for reasoning about layered attestations. We identify inference principles based on the causal effects of dynamic corruption, and we propose a method for bundling evidence that is robust to such corruptions.",
isbn="978-3-319-45572-3"
}


